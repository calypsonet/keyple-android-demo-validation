plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBeta = 1 //Use 99 if beta is over and going to production.

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "org.eclipse.keyple.demo.validator"
        minSdkVersion 19
        multiDexEnabled true
        targetSdkVersion 29
        versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBeta
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
//            versionNameSuffix "-DEBUG"
        }

        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //For lambda of legacy code
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/NOTICE.md'
    }

    dataBinding {
        enabled = true
    }

    flavorDimensions 'device'
    productFlavors {
        omapi {
            dimension 'device'
            resValue "string", "app_name", "Keyple OMAPI Validator"
            applicationIdSuffix ".omapi"
        }
        copernic {
            dimension 'device'
            resValue "string", "app_name", "Keyple Copernic Validator"
            applicationIdSuffix ".copernic"
        }
        famoco {
            dimension 'device'
            resValue "string", "app_name", "Keyple Famoco Validator"
            applicationIdSuffix ".famoco"
        }
        mockSam {
            dimension "device"
            resValue "string", "app_name", "Keyple Mock Sam Validator"
            applicationIdSuffix ".mockSam"
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'

        omapi.java.srcDirs += 'src/omapi/kotlin'
        copernic.java.srcDirs += 'src/copernic/kotlin'
        famoco.java.srcDirs += 'src/famoco/kotlin'
        mockSam.java.srcDirs += 'src/mockSam/kotlin'
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation project(":keyple-parser")

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "com.google.android.material:material:1.1.0-rc02"

    //Kotlin
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //Keyple
    implementation "org.eclipse.keyple:keyple-java-core:$keyple_version"
    implementation "org.eclipse.keyple:keyple-java-calypso:$keyple_version"

    omapiImplementation "org.eclipse.keyple:keyple-android-plugin-nfc:$keyple_version"
    omapiImplementation "org.eclipse.keyple:keyple-android-plugin-omapi:$keyple_version"

    famocoImplementation "org.eclipse.keyple:keyple-android-plugin-nfc:$keyple_version"
    famocoImplementation "org.eclipse.keyple:keyple-android-plugin-famoco-se-communication:$keyple_version"

    mockSamImplementation "org.eclipse.keyple:keyple-android-plugin-nfc:$keyple_version"

    copernicImplementation "org.eclipse.keyple:keyple-android-plugin-coppernic-ask:$keyple_version"

    // Android Architecture components dependencies
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //Multidex
    implementation 'com.android.support:multidex:1.0.3'

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"

    // Dagger dependencies
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    // Devnied - Byte Utils
    implementation('com.github.devnied:bit-lib4j:1.4.5') {
        exclude group: 'org.slf4j'
    }

    // Lottie for animation
    implementation 'com.airbnb.android:lottie:3.4.4'

    //Joda Time
    implementation "joda-time:joda-time:2.8.1"

    implementation "com.jakewharton.timber:timber:$timber_version" //Android

    testImplementation "junit:junit:$junit_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.test.ext:junit:$junit_androidx_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    testImplementation 'org.robolectric:robolectric:4.3.1'
}
